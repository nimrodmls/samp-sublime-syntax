%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
first_line_match: '{FFFFFF}SA-MP'
scope: chatlog.samp

variables:
  timestamp: '(\[\d\d:\d\d:\d\d\] )?'
  # The + in the end is to support surnames with multiple uppercase, like McTavish
  char_name: '([A-Z][a-z]+) ([A-Z][a-z]+)+'

contexts:

  main:
    # The main context is the initial starting point of our syntax.
    # Include other contexts from here (or specify them directly).
    - include: lottery
    - include: adverts
    - include: ic_chat
    - include: ooc_chat
    - include: faction
    - include: actions
    - include: san

  ic_chat:
    # Regular Local Chat (NO PROXIMITY!)
    - match: '^{{timestamp}}{{char_name}} says:'
      scope: samp.local_chat.chatlog.samp
      push:
        - meta_scope: samp.local_chat.chatlog.samp
        - match: $\n?
          pop: true
    # Shout Chat
    - match: '^{{timestamp}}{{char_name}} shouts:'
      scope: samp.shout_chat.chatlog.samp
      push:
        - meta_scope: samp.shout_chat.chatlog.samp
        - match: $\n?
          pop: true
    # Cellphone (vicinity)
    - match: '^{{timestamp}}{{char_name}} says \(cellphone\):'
      scope: samp.local_chat.chatlog.samp
      push:
        - meta_scope: samp.local_chat.chatlog.samp
        - match: $\n?
          pop: true
    # Radio (vicinity)
    - match: '^{{timestamp}}{{char_name}} says \(radio\):'
      scope: samp.local_chat.chatlog.samp
      push:
        - meta_scope: samp.local_chat.chatlog.samp
        - match: $\n?
          pop: true
    # Radio (global)
    - match: '^{{timestamp}}\[Radio\] {{char_name}}: (.*?)'
      scope: samp.radio.chatlog.samp
      push:
        - meta_scope: samp.radio.chatlog.samp
        - match: $\n?
          pop: true

  ooc_chat:
    # /b
    - match: '^{{timestamp}}\(\( \[OOC\] {{char_name}}: (.*?) \)\)'
      scope: samp.ooc.chatlog.samp
      push:
        - meta_scope: samp.ooc.chatlog.samp
        - match: $\n?
          pop: true
    # /pm
    - match: '^{{timestamp}}\[PM (to|from) {{char_name}}, ID \d+\] (.*?)'
      scope: samp.pm.chatlog.samp
      push:
        - meta_scope: samp.pm.chatlog.samp
        - match: $\n?
          pop: true

  faction:
    # Faction chat enabled / disabled
    - match: '^{{timestamp}}Faction chat has been (disabled|enabled) by {{char_name}}'
      scope: samp.fchat-on-off.chatlog.samp
      push:
        - meta_scope: samp.fchat-on-off.chatlog.samp
        - match: $\n?
          pop: true
    # /f - Faction Chat
    - match: '^{{timestamp}}\[(.*?) {{char_name}}\] (.*?)'
      scope: samp.ooc.chatlog.samp
      push:
        - meta_scope: samp.ooc.chatlog.samp
        - match: $\n?
          pop: true
    # /duty on/off global faction message
    - match: '^{{timestamp}}Faction Message: (.*?) {{char_name}} is now (on|off) duty.'
      scope: samp.fduty-on-off.chatlog.samp
      push:
        - meta_scope: samp.fduty-on-off.chatlog.samp
        - match: $\n?
          pop: true
    # Department Radio (vicinity)
    - match: '^{{timestamp}}{{char_name}} says \(dept\. radio\):'
      scope: samp.local_chat.chatlog.samp
      push:
        - meta_scope: samp.local_chat.chatlog.samp
        - match: $\n?
          pop: true
    # Department Radio
    - match: '^{{timestamp}}\[(SASP|RCFD|SBI)\] (.*?) {{char_name}} says:'
      scope: samp.department_radio.chatlog.samp
      push:
        - meta_scope: samp.department_radio.chatlog.samp
        - match: $\n?
          pop: true

  actions:
    # /me
    - match: '^{{timestamp}}{{char_name}} (.*?)'
      scope: samp.actions.chatlog.samp
      push:
        - meta_scope: samp.actions.chatlog.samp
        - match: $\n?
          pop: true
    # /my
    - match: '^{{timestamp}}{{char_name}}''s'
      scope: samp.actions.chatlog.samp
      push:
        - meta_scope: samp.actions.chatlog.samp
        - match: $\n?
          pop: true
    # /do
    - match: '^{{timestamp}}(.*) \(\({{char_name}}\)\)'
      scope: samp.actions.chatlog.samp
      push:
        - meta_scope: samp.actions.chatlog.samp
        - match: $\n?
          pop: true
    # Scripted /me
    - match: '^{{timestamp}}\* {{char_name}} (.*)\*'
      scope: samp.actions.chatlog.samp
      push:
        - meta_scope: samp.actions.chatlog.samp
        - match: $\n?
          pop: true
    # Scripted engine on/off
    - match: '^{{timestamp}}\* The (.*)''s engine is now (on|off). \*'
      scope: samp.actions.chatlog.samp
      push:
        - meta_scope: samp.actions.chatlog.samp
        - match: $\n?
          pop: true

  adverts:
    # Private Adverts
    - match: '^{{timestamp}}\[Private Advert\](.*) \[Phone: \d+\]'
      scope: samp.advert.chatlog.samp
      push:
        - meta_scope: samp.advert.chatlog.samp
        - match: $\n?
          pop: true
    # Business Adverts
    - match: '^{{timestamp}}\[Business Advert\]'
      scope: samp.advert.chatlog.samp
      push:
        - meta_scope: samp.advert.chatlog.samp
        - match: $\n?
          pop: true
    # Anonymous Advert
    - match: '^{{timestamp}}\[Advert\]'
      scope: samp.advert.chatlog.samp
      push:
        - meta_scope: samp.advert.chatlog.samp
        - match: $\n?
          pop: true

  lottery:
    # Lottery winner
    - match: '^{{timestamp}}\[Lottery\]'
      scope: samp.lottery.chatlog.samp
      push:
        - meta_scope: samp.lottery.chatlog.samp
        - match: $\n?
          pop: true
    # Lottery draw annoucement
    - match: '^{{timestamp}}The Lottery Draw is in (1|5) minute(s)?! Buy tickets from any general store\. Good luck!'
      scope: samp.lottery.chatlog.samp
      push:
        - meta_scope: samp.lottery.chatlog.samp
        - match: $\n?
          pop: true
    # Lottery number draw
    - match: '^{{timestamp}}\[Red County Lottery\] Draw Number: \d+'
      scope: samp.lottery.chatlog.samp
      push:
        - meta_scope: samp.lottery.chatlog.samp
        - match: $\n?
          pop: true

  san:
    # SAN News
    - match: '^{{timestamp}}\[NEWS\] (.*?) {{char_name}}:'
      scope: samp.lottery.chatlog.samp
      push:
        - meta_scope: samp.lottery.chatlog.samp
        - match: $\n?
          pop: true
    # SAN Talk Show
    - match: '^{{timestamp}}\[TALK SHOW\] (.*?) {{char_name}}:'
      scope: samp.lottery.chatlog.samp
      push:
        - meta_scope: samp.lottery.chatlog.samp
        - match: $\n?
          pop: true

